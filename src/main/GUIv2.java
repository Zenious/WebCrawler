/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.Color;
import java.awt.Component;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.GraphicsEnvironment;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.JTable;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import org.graphstream.algorithm.APSP;
import org.graphstream.algorithm.APSP.APSPInfo;
import org.graphstream.graph.implementations.DefaultGraph;
import org.graphstream.ui.swingViewer.View;
import org.graphstream.ui.swingViewer.Viewer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import page_utils.Page;
import threadhandle.ExecutorHandler;

/**
 *
 * @author Zheng Wei
 */
public class GUIv2 extends javax.swing.JFrame {

    private int emptyRow = 0;
    public static List<String> seeds = Collections.synchronizedList(new ArrayList<String>());
    public static ExecutorHandler ex;
    //public static List<Page> donePages = Collections.synchronizedList(new ArrayList<Page>());
    public static HashMap<String, Page> donePagesHashMap = new HashMap<>();
    public static int numberOfURLs = 15;
    public static DefaultTableModel dtm;
    private int noOfDownload = 5;
    private int noOfProcess = 5;
    public static HashMap<Integer, Integer> realIndex;
    private boolean openBefore = false;
    private List<String> linkList;
    private DefaultGraph graph;

    /**
     * Creates new form GUIv2
     */
    public GUIv2() {
        initComponents();
        centerAlign();
        try {
            GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
            ge.registerFont(Font.createFont(Font.TRUETYPE_FONT, new File("DejaVuSans.ttf")));
            System.out.println("[+] DejaVu Font Added!");
        } catch (IOException | FontFormatException e) {
            System.out.println("[-] DejaVu Font Not Added... Using Default Locale Font...");
            //Handle exception
        }
    }

    private void centerAlign() {
        Dimension frame = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) (frame.width - this.getWidth()) / 2;
        int y = (int) (frame.height - this.getHeight()) / 2;
        setLocation(x, y);
    }

    private void resetSettings() {
        dlSlider.setValue(noOfDownload);
        pSlider.setValue(noOfProcess);
        pagesInput.setText(String.valueOf(numberOfURLs));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileViewerFrame = new javax.swing.JFrame();
        sourceCodePanel = new javax.swing.JScrollPane();
        sourceCodeArea = new javax.swing.JTextArea();
        sourceCodeLabel = new javax.swing.JLabel();
        referencePanel = new javax.swing.JScrollPane();
        referenceList = new javax.swing.JList();
        referenceLabel = new javax.swing.JLabel();
        openInBrowserBtn = new javax.swing.JButton();
        fileChooser = new javax.swing.JFileChooser();
        preferenceDialog = new javax.swing.JDialog();
        preferencePanel = new javax.swing.JPanel();
        settingsLabel = new javax.swing.JLabel();
        dlThreadLabel = new javax.swing.JLabel();
        pThreadLabel = new javax.swing.JLabel();
        dlSlider = new javax.swing.JSlider();
        pSlider = new javax.swing.JSlider();
        pThreadLabel1 = new javax.swing.JLabel();
        pagesInput = new javax.swing.JTextField();
        settingsButtonPanel = new javax.swing.JPanel();
        saveSettingsBtn = new javax.swing.JButton();
        cancelSettingsButton = new javax.swing.JButton();
        jFrame1 = new javax.swing.JFrame();
        relationshipLabel = new javax.swing.JLabel();
        sourceField = new javax.swing.JTextField();
        destinationField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        searchBtn = new javax.swing.JButton();
        resultLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultArea = new javax.swing.JTextArea();
        mainPanel = new javax.swing.JPanel();
        pageScrollPane = new javax.swing.JScrollPane();
        pageTable = new javax.swing.JTable(){
            public String getToolTipText(MouseEvent event){
                String tip = null;
                java.awt.Point p = event.getPoint();
                int rowIndex = rowAtPoint(p);
                int colIndex = columnAtPoint(p);
                int realColumnIndex = convertColumnIndexToModel(colIndex);

                if(realColumnIndex == 0){
                    tip = getValueAt(rowIndex, colIndex).toString();
                }else{
                    tip = super.getToolTipText(event);
                }
                return tip;
            }
        };
        seedPanel = new javax.swing.JPanel();
        seedInput = new javax.swing.JTextField();
        seedLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        statusCode = new javax.swing.JLabel();
        buttonPanel = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        submitButton = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        graphBtn = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenu = new javax.swing.JMenuItem();
        saveMenu = new javax.swing.JMenuItem();
        closeMenu = new javax.swing.JMenuItem();
        settingsMenu = new javax.swing.JMenu();
        preferenceMenuItem = new javax.swing.JMenuItem();

        fileViewerFrame.setBackground(new java.awt.Color(255, 255, 255));

        sourceCodeArea.setEditable(false);
        sourceCodeArea.setColumns(20);
        sourceCodeArea.setLineWrap(true);
        sourceCodeArea.setRows(5);
        sourceCodePanel.setViewportView(sourceCodeArea);

        sourceCodeLabel.setText("Source Code:");

        referenceList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        referencePanel.setViewportView(referenceList);

        referenceLabel.setText("References:");

        openInBrowserBtn.setText("Open in browser");
        openInBrowserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openInBrowserBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fileViewerFrameLayout = new javax.swing.GroupLayout(fileViewerFrame.getContentPane());
        fileViewerFrame.getContentPane().setLayout(fileViewerFrameLayout);
        fileViewerFrameLayout.setHorizontalGroup(
            fileViewerFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fileViewerFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fileViewerFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fileViewerFrameLayout.createSequentialGroup()
                        .addGroup(fileViewerFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sourceCodePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sourceCodeLabel))
                        .addGap(18, 18, 18)
                        .addGroup(fileViewerFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(fileViewerFrameLayout.createSequentialGroup()
                                .addComponent(referenceLabel)
                                .addGap(0, 74, Short.MAX_VALUE))
                            .addComponent(referencePanel)))
                    .addGroup(fileViewerFrameLayout.createSequentialGroup()
                        .addComponent(openInBrowserBtn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        fileViewerFrameLayout.setVerticalGroup(
            fileViewerFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fileViewerFrameLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(fileViewerFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sourceCodeLabel)
                    .addComponent(referenceLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fileViewerFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(referencePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                    .addComponent(sourceCodePanel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(openInBrowserBtn)
                .addGap(14, 14, 14))
        );

        FileFilter filter = new FileNameExtensionFilter(".crawl Files", "crawl");
        fileChooser.setFileFilter(filter);
        fileChooser.setMaximumSize(new java.awt.Dimension(425, 245));

        preferenceDialog.setTitle("Settings - Preferences");

        preferencePanel.setBackground(new java.awt.Color(254, 254, 254));

        settingsLabel.setFont(new java.awt.Font("DejaVu Sans", 0, 15)); // NOI18N
        settingsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        settingsLabel.setText("Settings");

        dlThreadLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dlThreadLabel.setText("No. of Download Thread(s):");

        pThreadLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pThreadLabel.setText("No. of Process Thread(s):");

        dlSlider.setBackground(new java.awt.Color(255, 255, 255));
        dlSlider.setForeground(new java.awt.Color(0, 0, 0));
        dlSlider.setMajorTickSpacing(5);
        dlSlider.setMaximum(20);
        dlSlider.setMinorTickSpacing(1);
        dlSlider.setPaintLabels(true);
        dlSlider.setPaintTicks(true);
        dlSlider.setSnapToTicks(true);
        dlSlider.setValue(5);

        pSlider.setBackground(new java.awt.Color(255, 255, 255));
        pSlider.setForeground(new java.awt.Color(0, 0, 0));
        pSlider.setMajorTickSpacing(5);
        pSlider.setMaximum(20);
        pSlider.setMinorTickSpacing(1);
        pSlider.setPaintLabels(true);
        pSlider.setPaintTicks(true);
        pSlider.setSnapToTicks(true);
        pSlider.setValue(5);

        pThreadLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pThreadLabel1.setText("No. of Page(s) to Crawl:");

        pagesInput.setText("15");

        javax.swing.GroupLayout preferencePanelLayout = new javax.swing.GroupLayout(preferencePanel);
        preferencePanel.setLayout(preferencePanelLayout);
        preferencePanelLayout.setHorizontalGroup(
            preferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(preferencePanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(settingsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
            .addGroup(preferencePanelLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(preferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pThreadLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(preferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(dlThreadLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pThreadLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(preferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(pagesInput, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                    .addComponent(dlSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        preferencePanelLayout.setVerticalGroup(
            preferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(preferencePanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(settingsLabel)
                .addGap(18, 18, 18)
                .addGroup(preferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(dlSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dlThreadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(preferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pThreadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(preferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pagesInput)
                    .addComponent(pThreadLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        settingsButtonPanel.setBackground(new java.awt.Color(254, 254, 254));

        saveSettingsBtn.setText("Save");
        saveSettingsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveSettingsBtnMouseClicked(evt);
            }
        });

        cancelSettingsButton.setText("Cancel");
        cancelSettingsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelSettingsButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout settingsButtonPanelLayout = new javax.swing.GroupLayout(settingsButtonPanel);
        settingsButtonPanel.setLayout(settingsButtonPanelLayout);
        settingsButtonPanelLayout.setHorizontalGroup(
            settingsButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsButtonPanelLayout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(saveSettingsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(cancelSettingsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        settingsButtonPanelLayout.setVerticalGroup(
            settingsButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsButtonPanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(settingsButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveSettingsBtn)
                    .addComponent(cancelSettingsButton))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout preferenceDialogLayout = new javax.swing.GroupLayout(preferenceDialog.getContentPane());
        preferenceDialog.getContentPane().setLayout(preferenceDialogLayout);
        preferenceDialogLayout.setHorizontalGroup(
            preferenceDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(preferencePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(settingsButtonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        preferenceDialogLayout.setVerticalGroup(
            preferenceDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(preferenceDialogLayout.createSequentialGroup()
                .addComponent(preferencePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(settingsButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jFrame1.setAlwaysOnTop(true);
        jFrame1.setBackground(new java.awt.Color(255, 255, 255));

        relationshipLabel.setText("Check Relationship");

        sourceField.setText("Source");

        destinationField.setText("Destination");

        jLabel2.setText("->");

        searchBtn.setBackground(new java.awt.Color(255, 255, 255));
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        resultLabel.setText("Result :");

        resultArea.setEditable(false);
        resultArea.setColumns(20);
        resultArea.setLineWrap(true);
        resultArea.setRows(5);
        resultArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(resultArea);

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(relationshipLabel)
                            .addComponent(sourceField, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(destinationField, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchBtn))
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addComponent(resultLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(relationshipLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sourceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(destinationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultLabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WebCrawler - Java");
        setBackground(new java.awt.Color(254, 254, 254));
        setForeground(java.awt.Color.white);
        setName("mainFrame"); // NOI18N

        mainPanel.setBackground(new java.awt.Color(254, 254, 254));

        pageScrollPane.setFont(new java.awt.Font("DejaVu Sans", 0, 13)); // NOI18N

        pageTable.setFont(new java.awt.Font("DejaVu Sans", 0, 13)); // NOI18N
        pageTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "URL", " ", "Status", "No Of References"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        pageTable.setColumnSelectionAllowed(true);
        pageTable.getColumn (

            " ").setCellRenderer(new ProgressBarRender());
        pageTable.setFillsViewportHeight (

            true);
        pageScrollPane.setViewportView(pageTable);
        pageTable.addMouseListener ( new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                Page toView = null;
                if (e.getClickCount() == 2) {
                    JTable target = (JTable) e.getSource();
                    int row = target.getSelectedRow();
                    int column = 0;
                    String url = target.getValueAt(row, 0).toString();
                    System.out.println(url);

                    try {
                        toView = donePagesHashMap.get(url);
                        sourceCodeArea.setText(toView.getContent().toString());
                        DefaultListModel model = new DefaultListModel();
                        int realReferenceCount = (int)dtm.getValueAt(row, 3);
                        for (String ref : toView.getReferences()) {
                            model.addElement(ref);
                            realReferenceCount--;
                            if(realReferenceCount == 0) break;
                        }
                        referenceList.setModel(model);
                    } catch (InterruptedException|NullPointerException error) {
                        toView = null;
                    }
                    if(toView == null){
                        JOptionPane.showMessageDialog(
                            null,
                            "Page is not loaded properly. Please Try Again Later.",
                            "Page Error",
                            JOptionPane.ERROR_MESSAGE);
                    }else{
                        fileViewerFrame.pack();
                        fileViewerFrame.setTitle("Source Code & References - " + toView.getLink());
                        fileViewerFrame.setLocationRelativeTo(GUIv2.this);
                        fileViewerFrame.setVisible(true);
                    }
                }
            }
        }

    );
    pageTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

    seedPanel.setBackground(new java.awt.Color(254, 254, 254));

    seedInput.setFont(new java.awt.Font("DejaVu Sans", 0, 13)); // NOI18N
    seedInput.setText("Enter Website...");
    seedInput.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            seedInputActionPerformed(evt);
        }
    });
    seedInput.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            seedInputFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            seedInputFocusLost(evt);
        }
    });

    seedLabel.setFont(new java.awt.Font("DejaVu Sans", 0, 13)); // NOI18N
    seedLabel.setText("Seed :");

    statusLabel.setFont(new java.awt.Font("DejaVu Sans", 0, 13)); // NOI18N
    statusLabel.setText("Status :");

    statusCode.setFont(new java.awt.Font("DejaVu Sans", 0, 13)); // NOI18N
    statusCode.setForeground(new java.awt.Color(0, 255, 0));
    statusCode.setText("Ready!");

    buttonPanel.setBackground(new java.awt.Color(254, 254, 254));

    addButton.setFont(new java.awt.Font("DejaVu Sans", 0, 13)); // NOI18N
    addButton.setLabel("Add");
    addButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addButtonActionPerformed(evt);
        }
    });

    submitButton.setFont(new java.awt.Font("DejaVu Sans", 0, 13)); // NOI18N
    submitButton.setLabel("Start");
    submitButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            submitButtonActionPerformed(evt);
        }
    });

    clearBtn.setFont(new java.awt.Font("DejaVu Sans", 0, 13)); // NOI18N
    clearBtn.setText("Clear");
    clearBtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            clearBtnActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
    buttonPanel.setLayout(buttonPanelLayout);
    buttonPanelLayout.setHorizontalGroup(
        buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanelLayout.createSequentialGroup()
            .addComponent(addButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(submitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addComponent(clearBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    buttonPanelLayout.setVerticalGroup(
        buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(buttonPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(submitButton)
                .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGap(12, 12, 12)
            .addComponent(clearBtn))
    );

    graphBtn.setFont(new java.awt.Font("DejaVu Sans", 0, 13)); // NOI18N
    graphBtn.setText("Graph Mode");
    graphBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
    graphBtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            graphBtnActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout seedPanelLayout = new javax.swing.GroupLayout(seedPanel);
    seedPanel.setLayout(seedPanelLayout);
    seedPanelLayout.setHorizontalGroup(
        seedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, seedPanelLayout.createSequentialGroup()
            .addGroup(seedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(statusLabel)
                .addComponent(seedLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(seedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addGroup(seedPanelLayout.createSequentialGroup()
                    .addComponent(statusCode, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(graphBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addComponent(seedInput, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(40, 40, 40)
            .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    seedPanelLayout.setVerticalGroup(
        seedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(seedPanelLayout.createSequentialGroup()
            .addGap(11, 11, 11)
            .addGroup(seedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(seedInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(seedLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(seedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(statusCode, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(graphBtn)))
        .addGroup(seedPanelLayout.createSequentialGroup()
            .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
    mainPanel.setLayout(mainPanelLayout);
    mainPanelLayout.setHorizontalGroup(
        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(mainPanelLayout.createSequentialGroup()
            .addGap(21, 21, 21)
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pageScrollPane)
                .addGroup(mainPanelLayout.createSequentialGroup()
                    .addComponent(seedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGap(21, 21, 21))
    );
    mainPanelLayout.setVerticalGroup(
        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(mainPanelLayout.createSequentialGroup()
            .addGap(21, 21, 21)
            .addComponent(pageScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
            .addGap(10, 10, 10)
            .addComponent(seedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(26, 26, 26))
    );

    menuBar.setFont(new java.awt.Font("DejaVu Sans", 0, 13)); // NOI18N

    fileMenu.setText("File");
    fileMenu.setFont(new java.awt.Font("DejaVu Sans", 0, 13)); // NOI18N

    openMenu.setFont(new java.awt.Font("DejaVu Sans", 0, 13)); // NOI18N
    openMenu.setText("Open");
    openMenu.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            openMenuActionPerformed(evt);
        }
    });
    fileMenu.add(openMenu);

    saveMenu.setFont(new java.awt.Font("DejaVu Sans", 0, 13)); // NOI18N
    saveMenu.setText("Save");
    saveMenu.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            saveMenuActionPerformed(evt);
        }
    });
    fileMenu.add(saveMenu);

    closeMenu.setFont(new java.awt.Font("DejaVu Sans", 0, 13)); // NOI18N
    closeMenu.setText("Close");
    closeMenu.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            closeMenuActionPerformed(evt);
        }
    });
    fileMenu.add(closeMenu);

    menuBar.add(fileMenu);

    settingsMenu.setText("Settings");
    settingsMenu.setFont(new java.awt.Font("DejaVu Sans", 0, 13)); // NOI18N
    settingsMenu.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            settingsMenuActionPerformed(evt);
        }
    });

    preferenceMenuItem.setFont(new java.awt.Font("DejaVu Sans", 0, 13)); // NOI18N
    preferenceMenuItem.setText("Preferences");
    preferenceMenuItem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            preferenceMenuItemActionPerformed(evt);
        }
    });
    settingsMenu.add(preferenceMenuItem);

    menuBar.add(settingsMenu);

    setJMenuBar(menuBar);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(mainPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        if (seedInput.getText().toLowerCase().matches("^(https?:\\/\\/)([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$")) {
            if (seeds.contains(seedInput.getText())) {
                JOptionPane.showMessageDialog(pageScrollPane, "Url already inside list!", "Duplicated url", JOptionPane.INFORMATION_MESSAGE);
            } else {
                emptyRow = 0;
                seeds.add(seedInput.getText());
                dtm = (DefaultTableModel) pageTable.getModel();
                dtm.addRow(new Object[][]{null, null, null, null});
                while (dtm.getValueAt(emptyRow, 0) != null) {
                    emptyRow++;
                }
                dtm.setValueAt(seedInput.getText(), emptyRow, 0);
                dtm.setValueAt(0, emptyRow, 1);
                dtm.setValueAt("Queued", emptyRow, 2);
            }
            seedInput.setText("Enter Website...");
        } else if (seedInput.getText().equals("Enter Website...")) {
            JOptionPane.showMessageDialog(pageScrollPane, "Please Enter a url.", "No Url", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(pageScrollPane, "Please Enter a valid url.", "Invalid url", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void seedInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seedInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seedInputActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        ex = new ExecutorHandler(noOfDownload, noOfProcess, seeds);
        ex.start();
        statusCode.setText("Crawling...");
        statusCode.setForeground(Color.red);
        realIndex = new HashMap<>();
        //DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        //  for (int i = 0; i < dtm.getRowCount(); i++) {
        //    if(dtm.getValueAt(i, 2).toString().equals("Queued")){
        //      UrlHanderWorker uhw = new UrlHanderWorker(dtm, jTextField1.getText(), 0);
        //      uhw.execute();
        //    }
        //}

    }//GEN-LAST:event_submitButtonActionPerformed

    private void seedInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_seedInputFocusGained
        // TODO add your handling code here:
        if (seedInput.getText().equals("Enter Website...")) {
            seedInput.setText("");
        }
    }//GEN-LAST:event_seedInputFocusGained

    private void seedInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_seedInputFocusLost
        // TODO add your handling code here:
        if (seedInput.getText().isEmpty()) {
            seedInput.setText("Enter Website...");
        }
    }//GEN-LAST:event_seedInputFocusLost

    private void closeMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeMenuActionPerformed
        // TODO add your handling code here:
        System.exit(ABORT);
    }//GEN-LAST:event_closeMenuActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        try {
            seeds.clear();
            donePagesHashMap.clear();
            dtm.setRowCount(0);
            linkList.clear();
            emptyRow = 0;
        } catch (Exception e) {
        }
    }//GEN-LAST:event_clearBtnActionPerformed

    private void openInBrowserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openInBrowserBtnActionPerformed
        // TODO add your handling code here:
        if (Desktop.isDesktopSupported()) {
            try {
                int hyperlinkIndex = fileViewerFrame.getTitle().lastIndexOf(" ");
                Desktop.getDesktop().browse(new URI(fileViewerFrame.getTitle().substring(hyperlinkIndex + 1)));
            } catch (URISyntaxException ex) {
                Logger.getLogger(GUIv2.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(GUIv2.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_openInBrowserBtnActionPerformed

    private void openMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuActionPerformed
        // TODO add your handling code here:
        int returnVal = fileChooser.showOpenDialog(openMenu);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            donePagesHashMap.clear();
            if (dtm == null) {
                dtm = new DefaultTableModel();
            }
            dtm.setRowCount(0);
            File file = fileChooser.getSelectedFile();
            if (file.isFile()) {
                FileInputStream fis = null;
                try {
                    fis = new FileInputStream(file);
                    ObjectInputStream ois = new ObjectInputStream(fis);
                    donePagesHashMap = (HashMap<String, Page>) ois.readObject();
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(GUIv2.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(GUIv2.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(GUIv2.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    try {
                        fis.close();
                    } catch (IOException ex) {
                        Logger.getLogger(GUIv2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

            for (Map.Entry<String, Page> entry : donePagesHashMap.entrySet()) {
                dtm = (DefaultTableModel) pageTable.getModel();
                dtm.addRow(new Object[][]{null, null, null, null});
                while (dtm.getValueAt(emptyRow, 0) != null) {
                    emptyRow++;
                }
                dtm.setValueAt(entry.getValue().getLink(), emptyRow, 0);
                dtm.setValueAt(100, emptyRow, 1);
                dtm.setValueAt("Downloaded", emptyRow, 2);
                dtm.setValueAt(entry.getValue().getReferences().size(), emptyRow, 3);
            }
        }
    }//GEN-LAST:event_openMenuActionPerformed

    private void saveMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuActionPerformed
        // TODO add your handling code here:
        boolean acceptable = true;
        do {
            int returnVal = fileChooser.showSaveDialog(openMenu);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fileChooser.getSelectedFile();
                if (file.exists()) {
                    int option = JOptionPane.showConfirmDialog(pageScrollPane, "Overwrite File?");
                    if (option == JOptionPane.NO_OPTION) {
                        acceptable = false;
                    } else {
                        acceptable = true;
                    }
                } else {
                    acceptable = true;
                }
            } else {
                break;
            }
        } while (!acceptable);
        if (acceptable) {
            FileOutputStream fos = null;
            try {
                File file = fileChooser.getSelectedFile();
                System.out.println("File selected : " + file.getName());
                if (file.getName().endsWith(".crawl")) {
                    fos = new FileOutputStream(file);
                } else {
                    fos = new FileOutputStream(file + ".crawl");
                }
                try (ObjectOutputStream oos = new ObjectOutputStream(fos)) {
                    oos.writeObject(donePagesHashMap);
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GUIv2.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(GUIv2.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    fos.close();
                } catch (IOException ex) {
                    Logger.getLogger(GUIv2.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_saveMenuActionPerformed

    private void preferenceMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preferenceMenuItemActionPerformed
        // TODO add your handling code here:
        preferenceDialog.pack();
        preferenceDialog.setLocationRelativeTo(GUIv2.this);
        preferenceDialog.show();
    }//GEN-LAST:event_preferenceMenuItemActionPerformed

    private void settingsMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_settingsMenuActionPerformed

    private void cancelSettingsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelSettingsButtonMouseClicked
        // TODO add your handling code here:
        int option = JOptionPane.showConfirmDialog(
                null, "You are exiting Application Settings.\n"
                + "All changes made will be deleted.\nAre You sure?",
                "Exiting Settings", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);
        if (option == JOptionPane.YES_OPTION) {
            resetSettings();
            preferenceDialog.dispose();
        }
    }//GEN-LAST:event_cancelSettingsButtonMouseClicked

    private void saveSettingsBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveSettingsBtnMouseClicked
        // TODO add your handling code here:
        boolean inputIsInteger;
        try {
            Integer.parseInt(pagesInput.getText());
            inputIsInteger = true;
        } catch (NumberFormatException e) {
            inputIsInteger = false;
        }
        if (pagesInput.getText().isEmpty() || !inputIsInteger) {
            JOptionPane.showMessageDialog(
                    null,
                    "Invalid Settings. Please try again.",
                    "Settings Error",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            int option = JOptionPane.showConfirmDialog(
                    null,
                    "Are you sure these are the correct settings?",
                    "Confirmation Dialog",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE
            );
            if (option == JOptionPane.YES_OPTION) {
                noOfDownload = dlSlider.getValue();
                noOfProcess = pSlider.getValue();
                numberOfURLs = Integer.parseInt(pagesInput.getText());
                preferenceDialog.dispose();
            }
        }

    }//GEN-LAST:event_saveSettingsBtnMouseClicked

    private void graphBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graphBtnActionPerformed
        // TODO add your handling code here:
        List<String> tempList = new LinkedList<>();
        graph = new DefaultGraph("Network Graph");
        int referenceCount = 0;
        for (Map.Entry<String, Page> entry : donePagesHashMap.entrySet()) {
            String link = entry.getValue().getLink();
            if (graph.getNode(link) == null) {
                graph.addNode(link);
                graph.getNode(link).addAttribute("ui.label", link);
                tempList.add(link);
            }
            int referenceRow = 0;
            while (!dtm.getValueAt(referenceRow, 0).toString().equalsIgnoreCase(link)){
                referenceRow++;
            }
            int realReferenceCount = (int)dtm.getValueAt(referenceRow, 3);
            for (String ref : entry.getValue().getReferences()) {
                if (graph.getNode(ref) == null) {
                    // System.out.println("[*] Does not exist");
                    graph.addNode(ref);
                    graph.getNode(ref).addAttribute("ui.label", ref);
                    tempList.add(ref);
                    realReferenceCount--;
                    if (realReferenceCount == 0) break;
                } else {
                    //  System.out.println("[*] Exist!");
                }
                String refName = "Reference".concat(String.valueOf(referenceCount));
                graph.addEdge(refName, link, ref, true);
                referenceCount++;
            }
        }
        linkList = Collections.unmodifiableList(tempList);
        AutoCompleteDecorator.decorate(sourceField, linkList, false);
        AutoCompleteDecorator.decorate(destinationField, linkList, false);
        APSP apsp = new APSP();
        apsp.setDirected(true);
        apsp.init(graph);
        apsp.setWeightAttributeName("weight");
        System.out.println("[*] Computing using All Pair Shortest Pair Algo");
        apsp.compute();
        System.out.println("[*] Computed using All Pair Shortest Pair Algo");
        /*
         if (graph.getNode("http://www.google.com.sg") == null) {
         System.out.println("[*] Does not exist!");
         }
         APSPInfo info = graph.getNode("http://www.google.com").getAttribute(APSPInfo.ATTRIBUTE_NAME);
         System.out.println(info.getShortestPathTo("https://play.google.com/"));
         */

        //System.setProperty("org.graphstream.ui.renderer", "org.graphstream.ui.j2dviewer.J2DGraphRenderer");
        graph.addAttribute("ui.antialias");
        graph.addAttribute("ui.quality");
        graph.addAttribute("ui.stylesheet", "node {text-mode: hidden;}");
        Viewer viewer = graph.display();
        View view = viewer.getDefaultView();
        // Viewer viewer = new Viewer(graph, Viewer.ThreadingModel.GRAPH_IN_ANOTHER_THREAD);
        viewer.setCloseFramePolicy(Viewer.CloseFramePolicy.CLOSE_VIEWER);
        /*   View view = viewer.addDefaultView(false);
         view.getCamera().resetView();
         if(!openBefore){
         jFrame1.add(graphPanel);
         graphPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
         graphPanel.setLayout(new BorderLayout(0, 0));
         graphPanel.add(view, BorderLayout.CENTER);
         openBefore = true;*/
        //  }
        jFrame1.setTitle("Search for Relations...");
        jFrame1.pack();
        jFrame1.setLocationRelativeTo(null);
        jFrame1.setVisible(true);
    }//GEN-LAST:event_graphBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        if(!linkList.contains(sourceField.getText()) || !linkList.contains(destinationField.getText())){
            JOptionPane.showMessageDialog(pageScrollPane, "Please Enter valid link!", "Invalid link!", JOptionPane.INFORMATION_MESSAGE);
        }else{
        APSPInfo info = graph.getNode(sourceField.getText()).getAttribute(APSPInfo.ATTRIBUTE_NAME);
        String result = info.getShortestPathTo(destinationField.getText()).toString();
        result = result.substring(1, result.length() - 1);
        if (result.isEmpty()) {
            resultArea.setText("No Path from " + sourceField.getText() + " to " + destinationField.getText());
        } else {
            String[] resultArray = result.split(",");
            StringBuilder pathString = new StringBuilder("Path Found!");
            for (String path : resultArray) {
                pathString.append("  -->  ");
                pathString.append(path);
            }
            resultArea.setText(pathString.toString());
        }
        }
    }//GEN-LAST:event_searchBtnActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        String os = System.getProperty("os.name");
        String theme = "Windows";
        if (os.startsWith("Linux")) {
            theme = "GTK+";
        }
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if (theme.equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIv2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIv2().setVisible(true);
            }
        });
    }

    public class ProgressBarRender extends JProgressBar implements TableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            int progress = 0;
            setStringPainted(true);
            if (value instanceof Float) {
                progress = Math.round((float) value / 100);
                setValue(progress);
            } else if (value instanceof Integer) {
                progress = (int) value;
                if (progress > 100) {
                    this.setForeground(Color.red);
                } else {
                    this.setForeground(Color.BLUE);
                }
                setValue(progress);
            } else if (value instanceof String) {
                setString((String) value);
            }
            return this;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelSettingsButton;
    private javax.swing.JButton clearBtn;
    private javax.swing.JMenuItem closeMenu;
    private javax.swing.JTextField destinationField;
    private javax.swing.JSlider dlSlider;
    private javax.swing.JLabel dlThreadLabel;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JFrame fileViewerFrame;
    private javax.swing.JButton graphBtn;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton openInBrowserBtn;
    private javax.swing.JMenuItem openMenu;
    private javax.swing.JSlider pSlider;
    private javax.swing.JLabel pThreadLabel;
    private javax.swing.JLabel pThreadLabel1;
    private javax.swing.JScrollPane pageScrollPane;
    private javax.swing.JTable pageTable;
    private javax.swing.JTextField pagesInput;
    private javax.swing.JDialog preferenceDialog;
    private javax.swing.JMenuItem preferenceMenuItem;
    private javax.swing.JPanel preferencePanel;
    private javax.swing.JLabel referenceLabel;
    private javax.swing.JList referenceList;
    private javax.swing.JScrollPane referencePanel;
    private javax.swing.JLabel relationshipLabel;
    private javax.swing.JTextArea resultArea;
    private javax.swing.JLabel resultLabel;
    private javax.swing.JMenuItem saveMenu;
    private javax.swing.JButton saveSettingsBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField seedInput;
    private javax.swing.JLabel seedLabel;
    private javax.swing.JPanel seedPanel;
    private javax.swing.JPanel settingsButtonPanel;
    private javax.swing.JLabel settingsLabel;
    private javax.swing.JMenu settingsMenu;
    private javax.swing.JTextArea sourceCodeArea;
    private javax.swing.JLabel sourceCodeLabel;
    private javax.swing.JScrollPane sourceCodePanel;
    private javax.swing.JTextField sourceField;
    public static javax.swing.JLabel statusCode;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables
}
